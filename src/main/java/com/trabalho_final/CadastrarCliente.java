package com.trabalho_final;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
//import javax.swing.table.TableCellRenderer;

public class CadastrarCliente extends javax.swing.JPanel {

    private ClienteTableModel tabModel = new ClienteTableModel();
    private int linhaClicadaParaAtualizacao = -1;
    private Cliente clienteSelecionadoParaAtualizacao;
    private TableColor tableColor = new TableColor();

    /**
     * Creates new form Test
     */
    public CadastrarCliente() {
        initComponents();
        setBackground(Color.decode("#cadbb7"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeLabel = new javax.swing.JLabel();
        btnListar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        rgLabel = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        rgTextField = new javax.swing.JTextField();
        cpfLabel = new javax.swing.JLabel();
        btnOrdenar = new javax.swing.JComboBox<>();
        cpfTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        enderecoLabel = new javax.swing.JLabel();
        enderecoTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        clienteScroll = new javax.swing.JScrollPane();
        clienteTable = new javax.swing.JTable();
        nomeTextField = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        sobrenomeLabel = new javax.swing.JLabel();
        btnAlterar = new javax.swing.JButton();
        sobrenomeTextField = new javax.swing.JTextField();
        salarioField = new javax.swing.JTextField();
        salarioLabel = new javax.swing.JLabel();

        nomeLabel.setText("Nome:");

        btnListar.setText("Listar clientes");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir cliente");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        rgLabel.setText("RG:");

        btnLimpar.setText("Limpar campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        rgTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgTextFieldActionPerformed(evt);
            }
        });

        cpfLabel.setText("CPF:");

        btnOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Nome", "Sobrenome", "RG", "CPF", "Endereço", "Salário crescente", "Salário decrescente" }));
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        cpfTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Ordenar lista por:");

        enderecoLabel.setText("Endereço:");

        enderecoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enderecoTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Cadastre um cliente para movimentar o banco!");

        clienteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Sobrenome", "RG", "CPF", "Endereço", "Salário"
            }
        ));
        clienteTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clienteTableMouseClicked(evt);
            }
        });
        clienteScroll.setViewportView(clienteTable);

        nomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTextFieldActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar cliente");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        sobrenomeLabel.setText("Sobrenome:");

        btnAlterar.setText("Alterar cliente");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        sobrenomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobrenomeTextFieldActionPerformed(evt);
            }
        });

        salarioField.setText("0.0");

        salarioLabel.setText("Salário:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clienteScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrar)))
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(enderecoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enderecoTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(salarioLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomeLabel)
                                    .addComponent(rgLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nomeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(rgTextField))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sobrenomeLabel)
                                    .addComponent(cpfLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sobrenomeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(cpfTextField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnListar)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sobrenomeLabel)
                    .addComponent(sobrenomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgLabel)
                    .addComponent(rgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfLabel)
                    .addComponent(cpfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enderecoLabel)
                    .addComponent(enderecoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(salarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(salarioLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnCadastrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnListar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clienteScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rgTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rgTextFieldActionPerformed

    private void cpfTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfTextFieldActionPerformed

    private void enderecoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enderecoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enderecoTextFieldActionPerformed

    private void nomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTextFieldActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        clienteTable.setModel(tabModel);
        String nome = nomeTextField.getText();
        String sobreNome = sobrenomeTextField.getText();
        String rg = rgTextField.getText();
        String cpf = cpfTextField.getText();
        String endereco = enderecoTextField.getText();
        String salarioString = salarioField.getText();
        
        
        if (cpf.equals("")) {
            JOptionPane.showMessageDialog(null, "CPF não pode ser vazio.\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if (salarioString.equals("")) {
            JOptionPane.showMessageDialog(null, "Salario tem que ser positivo.\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        double salario = Double.parseDouble(salarioString);

        Cliente c = new Cliente(nome, sobreNome, rg, cpf, endereco, salario);

        Sistema.hashClientes.put(cpf, c);

        this.tabModel.setListaContatos(Sistema.hashClientes);

        this.clienteTable.setRowSelectionInterval(Sistema.hashClientes.size() - 1, Sistema.hashClientes.size() - 1);

        this.clienteSelecionadoParaAtualizacao = c;
        linhaClicadaParaAtualizacao = Sistema.hashClientes.size() - 1;

        for (int i = 0;
                i < clienteTable.getColumnCount();
                i++) {
            clienteTable.getColumnModel().getColumn(i).setCellRenderer(tableColor);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void sobrenomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobrenomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sobrenomeTextFieldActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        List<Cliente> listaExcluir = getClienteParaExcluirDaTabela();
        if (listaExcluir.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione alguma linha para excluir.\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int option = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o cliente selecionado?\n"
                + "Esta ação também apagará todas as contas vinculadas a este cliente.",
                "Confirmação de Exclusão", JOptionPane.YES_NO_OPTION);
        if (option != JOptionPane.YES_OPTION) {
            return;
        }

        this.tabModel.removeClientes(listaExcluir);
        for (Cliente c : listaExcluir) {
            Sistema.hashClientes.remove(c.getCpf());
        }
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao = -1;
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        Cliente c = this.getClienteParaAtualizar();
        if (c == null) {
            return;
        }
        Sistema.hashClientes.replace(c.getCpf(), c);
        this.tabModel.atualizarCliente(linhaClicadaParaAtualizacao);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        nomeTextField.setText("");
        sobrenomeTextField.setText("");
        rgTextField.setText("");
        cpfTextField.setText("");
        enderecoTextField.setText("");
        tabModel.setListaContatos(Sistema.hashClientes);
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao = -1;
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        tabModel.setListaContatos(Sistema.hashClientes);
        this.clienteSelecionadoParaAtualizacao = null;
        linhaClicadaParaAtualizacao = -1;
    }//GEN-LAST:event_btnListarActionPerformed

    private void clienteTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clienteTableMouseClicked
        // TODO add your handling code here:
        linhaClicadaParaAtualizacao = this.clienteTable.rowAtPoint(evt.getPoint());
        Cliente cliente = this.tabModel.getCliente(linhaClicadaParaAtualizacao);
        this.setCliente(cliente);
    }//GEN-LAST:event_clienteTableMouseClicked

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:
        tabModel.ordenarPorCriterio(btnOrdenar.getSelectedItem().toString());
        tabModel.fireTableDataChanged();
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private List<Cliente> getClienteParaExcluirDaTabela() {
        int[] linhasSelecionadas = this.clienteTable.getSelectedRows();
        List<Cliente> listaExcluir = new ArrayList();
        for (int i = 0; i < linhasSelecionadas.length; i++) {
            Cliente contato = this.tabModel.getCliente(linhasSelecionadas[i]);
            listaExcluir.add(contato);
        }
        return listaExcluir;
    }

    private Cliente getClienteParaAtualizar() {
        if (clienteSelecionadoParaAtualizacao == null) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente na tabela para atualizar.\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
        if (!cpfTextField.getText().equals(clienteSelecionadoParaAtualizacao.getCpf())) {
            JOptionPane.showMessageDialog(null, "Você não pode atualizar o CPF!!!!\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
            cpfTextField.setText(clienteSelecionadoParaAtualizacao.getCpf());
            return null;
        }
        clienteSelecionadoParaAtualizacao.setEndereco(enderecoTextField.getText());
        clienteSelecionadoParaAtualizacao.setNome(nomeTextField.getText());
        clienteSelecionadoParaAtualizacao.setRg(rgTextField.getText());
        clienteSelecionadoParaAtualizacao.setSobreNome(sobrenomeTextField.getText());
        clienteSelecionadoParaAtualizacao.setSalario(Double.parseDouble(salarioField.getText()));
        return clienteSelecionadoParaAtualizacao;

    }

    private void setCliente(Cliente c) {
        this.clienteSelecionadoParaAtualizacao = c;
        nomeTextField.setText(c.getNome());
        sobrenomeTextField.setText(c.getSobreNome());
        rgTextField.setText(c.getRg());
        cpfTextField.setText(c.getCpf());
        enderecoTextField.setText(c.getEndereco());
        salarioField.setText(Double.toString(c.getSalario()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnListar;
    private javax.swing.JComboBox<String> btnOrdenar;
    private javax.swing.JScrollPane clienteScroll;
    private javax.swing.JTable clienteTable;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JTextField cpfTextField;
    private javax.swing.JLabel enderecoLabel;
    private javax.swing.JTextField enderecoTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JLabel rgLabel;
    private javax.swing.JTextField rgTextField;
    private javax.swing.JTextField salarioField;
    private javax.swing.JLabel salarioLabel;
    private javax.swing.JLabel sobrenomeLabel;
    private javax.swing.JTextField sobrenomeTextField;
    // End of variables declaration//GEN-END:variables
}
